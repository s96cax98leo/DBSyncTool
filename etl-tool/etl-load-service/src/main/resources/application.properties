# Kafka Consumer Properties (for transformed data)
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=load-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.yt.etl.common.model,java.util,java.lang
spring.kafka.consumer.properties.spring.json.value.defaultType=com.yt.etl.common.model.DataRecordBatch

# Kafka Producer Properties (for status updates)
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Application Specific Topic Names
etl.topics.input.transformed=transformed-data-topic
etl.topics.status.updates=etl-job-status-updates-topic

# Data Load properties
etl.load.batchSize=1000 # Default batch size for writing to target DB
# etl.load.truncateBeforeLoad=false # Example property for controlling truncate behavior

# Logging
logging.level.com.yt.etl.load=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN

# Default Spring Boot Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=${spring.application.name}

# Spring Application Name
spring.application.name=etl-load-service
