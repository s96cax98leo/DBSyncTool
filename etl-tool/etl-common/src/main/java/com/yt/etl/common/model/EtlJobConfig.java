package com.yt.etl.common.model;

import java.util.List;
import java.util.Map;
import java.util.Objects;

public class EtlJobConfig {

    private String jobId; // Can be null if new, will be generated by orchestration service
    private String jobName;
    private DatabaseConnectionConfig sourceDbConfig;
    private DatabaseConnectionConfig targetDbConfig;
    private List<String> tablesToProcess; // List of source table names
    // Key is source table name, value is the transformation config for that table
    private Map<String, JobTransformationConfig> tableTransformationConfigs;

    public EtlJobConfig() {
    }

    public EtlJobConfig(String jobId, String jobName, DatabaseConnectionConfig sourceDbConfig, DatabaseConnectionConfig targetDbConfig, List<String> tablesToProcess, Map<String, JobTransformationConfig> tableTransformationConfigs) {
        this.jobId = jobId;
        this.jobName = jobName;
        this.sourceDbConfig = sourceDbConfig;
        this.targetDbConfig = targetDbConfig;
        this.tablesToProcess = tablesToProcess;
        this.tableTransformationConfigs = tableTransformationConfigs;
    }

    // Getters and Setters
    public String getJobId() {
        return jobId;
    }

    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public String getJobName() {
        return jobName;
    }

    public void setJobName(String jobName) {
        this.jobName = jobName;
    }

    public DatabaseConnectionConfig getSourceDbConfig() {
        return sourceDbConfig;
    }

    public void setSourceDbConfig(DatabaseConnectionConfig sourceDbConfig) {
        this.sourceDbConfig = sourceDbConfig;
    }

    public DatabaseConnectionConfig getTargetDbConfig() {
        return targetDbConfig;
    }

    public void setTargetDbConfig(DatabaseConnectionConfig targetDbConfig) {
        this.targetDbConfig = targetDbConfig;
    }

    public List<String> getTablesToProcess() {
        return tablesToProcess;
    }

    public void setTablesToProcess(List<String> tablesToProcess) {
        this.tablesToProcess = tablesToProcess;
    }

    public Map<String, JobTransformationConfig> getTableTransformationConfigs() {
        return tableTransformationConfigs;
    }

    public void setTableTransformationConfigs(Map<String, JobTransformationConfig> tableTransformationConfigs) {
        this.tableTransformationConfigs = tableTransformationConfigs;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        EtlJobConfig that = (EtlJobConfig) o;
        return Objects.equals(jobId, that.jobId) &&
               Objects.equals(jobName, that.jobName) &&
               Objects.equals(sourceDbConfig, that.sourceDbConfig) &&
               Objects.equals(targetDbConfig, that.targetDbConfig) &&
               Objects.equals(tablesToProcess, that.tablesToProcess) &&
               Objects.equals(tableTransformationConfigs, that.tableTransformationConfigs);
    }

    @Override
    public int hashCode() {
        return Objects.hash(jobId, jobName, sourceDbConfig, targetDbConfig, tablesToProcess, tableTransformationConfigs);
    }

    @Override
    public String toString() {
        return "EtlJobConfig{" +
                "jobId='" + jobId + '\'' +
                ", jobName='" + jobName + '\'' +
                ", sourceDbConfig=" + sourceDbConfig +
                ", targetDbConfig=" + targetDbConfig +
                ", tablesToProcess=" + tablesToProcess +
                ", tableTransformationConfigs_count=" + (tableTransformationConfigs != null ? tableTransformationConfigs.size() : "null") +
                '}';
    }
}
