apiVersion: apps/v1
kind: Deployment
metadata:
  name: etl-transform-service
  namespace: etl-ns
  labels:
    app: etl-transform-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etl-transform-service
  template:
    metadata:
      labels:
        app: etl-transform-service
    spec:
      containers:
      - name: etl-transform-service
        image: your-registry/etl-transform-service:latest # Placeholder
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082 # Default port for transform service
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: etl-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: ETL_TOPICS_INPUT_UNTRANSFORMED
          valueFrom:
            configMapKeyRef:
              name: etl-config
              key: UNTRANSFORMED_DATA_TOPIC
        - name: ETL_TOPICS_OUTPUT_TRANSFORMED
          valueFrom:
            configMapKeyRef:
              name: etl-config
              key: TRANSFORMED_DATA_TOPIC
        # Note: transform service does not produce to status topic directly in current design
        # but if it did, that topic name would also come from configmap
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8082
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: etl-transform-svc
  namespace: etl-ns
  labels:
    app: etl-transform-service
spec:
  selector:
    app: etl-transform-service
  ports:
  - protocol: TCP
    port: 8082
    targetPort: 8082
  type: ClusterIP
