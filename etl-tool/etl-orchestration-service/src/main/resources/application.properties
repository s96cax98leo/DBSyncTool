# Spring Application Name
spring.application.name=etl-orchestration-service

# Datasource Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/etl_job_db
spring.datasource.username=your_pg_user # Replace with your actual PostgreSQL username
spring.datasource.password=your_pg_password # Replace with your actual PostgreSQL password
spring.datasource.driverClassName=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Set to 'validate' to ensure Hibernate schema matches Flyway-managed schema.
# 'none' if Flyway is solely responsible and you don't want Hibernate to touch DDL.
# 'update' can be used in dev but 'validate' is safer with Flyway.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false # Set to true for debugging SQL statements
spring.jpa.properties.hibernate.format_sql=false

# Flyway Configuration
spring.flyway.enabled=true
# Location of migration scripts in classpath
spring.flyway.locations=classpath:db/migration
# Consider baseline-on-migrate for existing schemas, but for new setup, this is fine.
# spring.flyway.baseline-on-migrate=true

# Kafka Consumer Properties (for status updates)
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=orchestration-status-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.yt.etl.common.model,java.util,java.lang
spring.kafka.consumer.properties.spring.json.value.defaultType=com.yt.etl.common.model.JobStatusUpdate

# Kafka Producer Properties (for commands to other services)
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Application Specific Topic Names
etl.topics.command.extract=extraction-commands-topic
etl.topics.status.updates=etl-job-status-updates-topic

# Logging
logging.level.com.yt.etl.orchestration=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN
logging.level.org.flywaydb=INFO # Flyway logging
logging.level.org.hibernate.SQL=DEBUG # To see generated SQL if spring.jpa.show-sql=true
logging.level.org.hibernate.type.descriptor.sql=TRACE # To see parameters if spring.jpa.show-sql=true

# Default Spring Boot Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers,mappings,configprops,env,flyway
management.endpoint.health.show-details=always
management.metrics.tags.application=${spring.application.name}
